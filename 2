#include <iostream>
#include <cmath>

using namespace std;

// Функция для вычисления дальности полета L в зависимости от угла alpha
double flightRange(double alpha, double V, double g) {
    return (V * V * sin(2 * alpha)) / g;
}

// Производная функции дальности полета по alpha
double derivativeFlightRange(double alpha, double V, double g) {
    return (2 * V * V * cos(2 * alpha)) / g;
}

// Метод Ньютона для нахождения угла alpha
double newtonMethod(double V, double L, double g, double initialGuess, double tolerance) {
    double alpha = initialGuess;
    double delta = 1.0;
    
    while (fabs(delta) > tolerance) {
        double f = flightRange(alpha, V, g) - L;
        double df = derivativeFlightRange(alpha, V, g);
        delta = f / df;
        alpha -= delta;
    }
    
    return alpha;
}

int main() {
    double V = 10.0; // Начальная скорость
    double L = 5.0;  // Заданная дальность полета
    double g = 9.81; // Ускорение свободного падения
    double initialGuess = 0.5; // Начальное предположение для alpha
    double tolerance = 1e-6; // Точность
    
    double alpha = newtonMethod(V, L, g, initialGuess, tolerance);
    
    cout << "Угол alpha: " << alpha << " радиан" << endl;
    cout << "Угол alpha: " << alpha * 180 / M_PI << " градусов" << endl;
    
    return 0;
}
