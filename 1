#include <iostream>
#include <cmath>

const double g = 9.81;

double f(double alpha, double V, double T) {
    return sin(alpha) - (g * T) / (2 * V);
}

double f_prime(double alpha) {
    return cos(alpha);
}

double newton_method(double V, double T, double initial_guess, double tolerance = 1e-6, int max_iterations = 1000) {
    double alpha = initial_guess;
    for (int i = 0; i < max_iterations; ++i) {
        double f_value = f(alpha, V, T);
        double f_prime_value = f_prime(alpha);
        double alpha_new = alpha - f_value / f_prime_value;
        if (std::abs(alpha_new - alpha) < tolerance) {
            return alpha_new;
        }
        alpha = alpha_new;
    }
    return alpha;
}

int main() {
    double V, T;
    std::cout << "Введите начальную скорость V: ";
    std::cin >> V;
    std::cout << "Введите время полета T: ";
    std::cin >> T;

    double initial_guess = 0.5; // Начальное предположение для угла
    double alpha = newton_method(V, T, initial_guess);

    std::cout << "Угол alpha: " << alpha << " радиан" << std::endl;
    return 0;
}
